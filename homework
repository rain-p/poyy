    class SliceOHeaven {
    private String storeName;
    private String storeAddress;
    private String storeEmail;
    private String storePhone;
    private String storeMenu;
    private String pizzaIngredients;
    private double pizzaPrice;
    private String sides;
    private String drinks;
    private String orderID; 
    private double orderTotal; 

   
    private static final String DEF_ORDER_ID = "DEF-SOH-099";
    private static final String DEF_PIZZA_INGREDIENTS = "Mozzarella Cheese";
    private static final double DEF_ORDER_TOTAL = 15.00;

   
    public SliceOHeaven() {
        this.orderID = DEF_ORDER_ID;
        this.pizzaIngredients = DEF_PIZZA_INGREDIENTS;
        this.orderTotal = DEF_ORDER_TOTAL;
        this.sides = "Garlic Bread";
        this.drinks = "Coke";
    }

    
    public SliceOHeaven(String orderID, String pizzaIngredients, double orderTotal) {
        this.orderID = orderID;
        this.pizzaIngredients = pizzaIngredients;
        this.orderTotal = orderTotal;
    }

    public String getOrderID() {
        return orderID;
    }

    public void setOrderID(String orderID) {
        this.orderID = orderID;
    }

    public double getOrderTotal() {
        return orderTotal;
    }

    public void setOrderTotal(double orderTotal) {
        this.orderTotal = orderTotal;
    }

    
    public void takeOrder() {
        System.out.println("Taking order...");
        
    }

    public void makePizza() {
        System.out.println("Making pizza with ingredients: " + pizzaIngredients);
        
    }

    private void printReceipt() {
        System.out.println("Order ID: " + orderID);
        System.out.println("Pizza Ingredients: " + pizzaIngredients);
        System.out.println("Order Total: $" + orderTotal);
        System.out.println("Thank you for ordering from Slice-o-Heaven!");
    }

  
    public void processOrder() {
        takeOrder();
        makePizza();
        printReceipt(); 
    }
    public void  processCardPayment(String cardNumber,String expiryDate,int cvv )
    {
          int lastFourDigits=Integar.parseInt(cardNumber .subString(10,13));
          if (String.length(cardNumber)==14)
          {
            System.out.println("Card accepted");
          }
          else
          {
            System.out.println("Invalid card");
          }
          int firstCardDigit= Integer.parseInt(cardNumber);
          String  blacklistedNumber;
          if(cardNumber.equals(blacklistedNumber))
          {
            System.out.println( "Card is blacklisted,Please use anothercard");
          }
          String cardNumberToDisplay0=cardNumber.replace(firstCardDigit,"*");
          String cardNumberToDisplay=cardNumberToDisplay0.replace(lastFourDigits,"*");
     
    }
    public void specialOfTheDay(String specialOfTheDay,String sideOfTheDay,String specialPrice )
    {
        
    }
    public static void main(String[] args) {
     
        SliceOHeaven order1 = new SliceOHeaven();
        order1.processOrder();

       
        SliceOHeaven order2 = new SliceOHeaven("SOH-123", "Pepperoni, Mushrooms, Olives", 25.00);
        order2.processOrder();
    }
}
